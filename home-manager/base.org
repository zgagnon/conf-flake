* Home Manager Base

** The Flake Modules
#+begin_src nix :tangle default.nix
{
  pkgs,
  extraPackages,
  home-manager,
  homeDirectory,
  user,
  email,
  ...
}@inputs:
let
  system = import ../system user inputs;
  mac = import ../os/mac;
  homebrewPackages = import ./homebrew.nix;
  homebrew = import ../os/mac/homebrew.nix homebrewPackages;
  lib = pkgs.lib;
in
[
  system
  mac
  homebrew
  home-manager.darwinModules.home-manager
  {
    imports = [
      (import ./program-config/onep.nix {
        inherit homeDirectory lib pkgs user;
      })
      (import ./program-config/git.nix {
        inherit lib pkgs homeDirectory user email;
      })
      (import ./program-config/jj.nix {
        inherit lib pkgs homeDirectory user email;
      })
    ];
    home-manager.extraSpecialArgs = {
      inherit extraPackages homeDirectory user email;
    };
    home-manager.useGlobalPkgs = true;
    home-manager.useUserPackages = true;
    home-manager.users.zell = import ./home.nix;
  }
]
#+end_src
** The Home Manager
#+begin_src nix :tangle home.nix
{
  pkgs,
  specialArgs,
  config,
  ...
}:
let
  lib = pkgs.lib;
in
{
  # inherit programs;
  programs.aerospace = import ./program-config/aerospace.nix;
  # programs.wezterm = import ./program-config/wezterm.nix {
  #   package = specialArgs.extraPackages.wezterm;
  # };
  programs.nushell = import ./program-config/nushell.nix;
  programs.starship = import ./program-config/starship.nix { inherit lib; };
  programs.carapace = import ./program-config/carapace.nix;
  programs.atuin = import ./program-config/atuin.nix;
  programs.zoxide = import ./program-config/zoxide.nix;
  programs.direnv = import ./program-config/direnv.nix;
  programs.zsh = import ./program-config/zsh.nix {inherit config;};
  programs.gpg = import ./program-config/gpg.nix;

  services.syncthing.enable = true;
  home = {
    stateVersion = "23.11";
    username = lib.mkDefault specialArgs.user;
    homeDirectory = lib.mkForce specialArgs.homeDirectory;
    file = {
      ".config/ghostty/config" = {
        source = files/ghostty;
      };
    };
    packages = (
      import ./home-manager.nix {
        inherit pkgs ;
        extraPackages = specialArgs.extraPackages;
      }
    );
  };
}
#+end_src

** Home Manager Installs
These packages are installed via nix itself

#+begin_src nix :tangle ./home-manager.nix
{ pkgs, extraPackages,... }:
let
gdk = pkgs.google-cloud-sdk.withExtraComponents (with pkgs.google-cloud-sdk.components; [
    gke-gcloud-auth-plugin
  ]);
in
with pkgs;
[
  extraPackages.lexical
  _1password-cli
  action-validator
  aider-chat
  anki-bin
  bat
  cabal-install
  cachix
  coreutils
  csharpier
  direnv
  elixir_1_17
  emacs
  emacs-lsp-booster
  erlfmt
  eza
  fasd
  fd
  figlet
  fira-code
  gh
  gnugrep
  gdk
  haskellPackages.hoogle
  haskellPackages.lsp
  jetbrains.idea-community
  just
  kubectx
  kubernetes-helm
  mods
  nil
  nixfmt-rfc-style
  nodePackages.js-beautify
  nodePackages.typescript-language-server
  nodejs
  pandoc
  pgadmin4-desktopmode
  ripgrep
  shellcheck
  shfmt
  stgit
  stylelint
  terraform
  thefuck
  tree-sitter
  tree-sitter-grammars.tree-sitter-heex
  vscodium
  zellij
]
#+end_src

** Homebrew Installs
These packages are installed via homebrew

#+begin_src nix :tangle ./homebrew.nix
{
  brews = [ "exercism" ];

  casks = [
    "google-chrome"
    "nikitabobko/tap/aerospace"
    "notion"
    "discord"
    "arc"
    "orbstack"
    "raycast"
    "readdle-spark"
    "slack"
    "spotify"
    "logseq"
    "tandem"
    "tuple"
    "warp"
    "zoom"
    "skype"
    "microsoft-teams"
    "soundsource"
    "ghostty"
  ];
}
#+end_src
